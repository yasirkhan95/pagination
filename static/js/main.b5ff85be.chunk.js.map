{"version":3,"sources":["Components/Result/Result.js","Actions/index.js","Constants/index.js","Components/App.js","Reducer/index.js","index.js"],"names":["Result","state","itemPerPage","this","props","Data_Loaded_Successfully","Check","undefined","location","totalPage","currentPage","lastPage","newArr","data","slice","console","log","numberofPages","i","Math","ceil","length","push","className","loading","map","item","src","id","alt","title","substr","body","page","key","style","backgroundColor","onClick","e","history","pathname","Component","connect","dispath","type","axios","get","then","res","payload","catch","withRouter","App","initState","Error","middleware","thunk","logger","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"oSAMMA,E,2MAEFC,MAAQ,CACRC,YAAY,G,mFAIZC,KAAKC,MAAMC,6B,+BAEH,IAAD,OACDC,OAAmCC,IAA5BJ,KAAKC,MAAMI,SAASP,MAC3BQ,EAAWH,EAAO,EAAIH,KAAKF,MAAMC,YAAeC,KAAKC,MAAMI,SAASP,MAAMS,YAAcP,KAAKF,MAAMC,YACnGS,EAAUF,EAAYN,KAAKF,MAAMC,YACjCU,EAAST,KAAKC,MAAMS,KAAKC,MAAMH,EAASF,GAE9CM,QAAQC,IAAIb,KAAKC,OAEjB,IADA,IAAMa,EAAgB,GACdC,EAAG,EAAGA,GAAKC,KAAKC,KAAKjB,KAAKC,MAAMS,KAAKQ,OAASlB,KAAKF,MAAMC,aAAagB,IAC5ED,EAAcK,KAAKJ,GAEjB,OACI,yBAAKK,UAAU,aACX,yBAAKA,UAAU,gBACVpB,KAAKC,MAAMoB,QAER,yBAAMD,UAAU,WAGlBX,EAAOa,KAAI,SAACC,GACV,OACI,yBAAKH,UAAU,WACX,yBAAKI,IAAG,+BAA0BD,EAAKE,GAA/B,iBAAkDC,IAAI,KAC9D,wBAAIN,UAAU,QAAQG,EAAKI,MAAMC,OAAO,EAAE,KAC1C,2BAAIL,EAAKM,KAAKD,OAAO,EAAE,WAKvC,yBAAKR,UAAU,oBAEX,4BAEIN,EAAcQ,KAAI,SAACQ,EAAKf,GACxB,OAAO,wBAAIgB,IAAKhB,EAAGU,GAAIK,EAEvBE,MAAO,CACHC,gBAAiB9B,EACjB,GACA2B,IAAO,EAAK7B,MAAMI,SAASP,MAAMS,YAAc,MAAQ,IAG3D2B,QAAS,SAACC,GAAD,OACL,EAAKlC,MAAMmC,QAAQjB,KAAK,CACpBkB,SAAS,SAAD,OAAWP,GACnBhC,MAAO,CAACS,YAAcuB,OAG5BA,a,GAzDLQ,aA2ENC,eAPO,SAACzC,GACnB,MAAM,CACFY,KAAMZ,EAAMY,KACZW,QAASvB,EAAMuB,WAIgB,CAACnB,yBCpDA,WACpC,OAAO,SAAAsC,GACHA,EAfE,CACFC,KChBe,YD+BfC,IAAMC,IAAI,8CACTC,MAAK,SAAAC,GAAQL,EAAU,CAACC,KC9BJ,gBD8B8BK,QAASD,EAAInC,UACjEqC,OAAM,SAAAZ,GACLK,EAbG,CACHC,KCrBmB,cDuBnBK,QAUoBX,UD8CbI,CAAqDS,YAAWnD,IGrEhEoD,EATH,WACR,OACI,6BACI,wBAAI7B,UAAU,oBAAd,aACA,kBAAC,EAAD,Q,yCCLN8B,EAAU,CACZxC,KAAK,GACLW,SAAS,EACT8B,MAAQ,I,QCMNC,EAAa,CAACC,IAAMC,KACpBC,EAAQC,aDJQ,WAA2B,IAA1B1D,EAAyB,uDAAnBoD,EAAUO,EAAS,uCAC5C,OAAQA,EAAOhB,MACX,IFTe,UEWX,sBACO3C,EADP,CAEIuB,SAAS,IAEjB,IFdmB,cEef,OAAO,eACAvB,EADP,CAEIuB,SAAQ,EACR8B,MAAOM,EAAOX,UAEtB,IFnBqB,gBEoBjB,OAAO,eACAhD,EADP,CAEIuB,SAAQ,EACRX,KAAM+C,EAAOX,UAGrB,QACI,sBACOhD,MCnBe4D,IAAe,WAAf,EAAmBN,IACrDO,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGPM,SAASC,eAAe,W","file":"static/js/main.b5ff85be.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Data_Loaded_Successfully} from '../../Actions/index';\r\nimport './Result.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Result extends Component {\r\n\r\n    state = {\r\n    itemPerPage:8\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.Data_Loaded_Successfully();\r\n  }\r\n  render() {\r\n    const Check= this.props.location.state===undefined \r\n    const totalPage =Check? 1 * this.state.itemPerPage :  this.props.location.state.currentPage * this.state.itemPerPage;\r\n    const lastPage =totalPage - this.state.itemPerPage;\r\n    const newArr = this.props.data.slice(lastPage,totalPage);\r\n\r\n    console.log(this.props)\r\n    const numberofPages = [];\r\n    for(var i =1; i <= Math.ceil(this.props.data.length / this.state.itemPerPage);i++){\r\n      numberofPages.push(i)\r\n    }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main my-auto\">\r\n                    {this.props.loading ? \r\n                    (\r\n                        <div  className=\"loader\">\r\n                        </div>\r\n                    )\r\n                    :(newArr.map((item)=>{\r\n                        return (\r\n                            <div className=\" div-25\">\r\n                                <img src={`https://robohash.org/${item.id}?size=120x120`} alt=\"\"/>\r\n                                <h4 className=\"mt-3\">{item.title.substr(0,10)}</h4>\r\n                                <p>{item.body.substr(0,100)}</p>\r\n                            </div>\r\n                            )\r\n                        }))}\r\n                </div>\r\n                <div className=\"text-center pt-4\">\r\n                   {\r\n                    <ul>\r\n                        {\r\n                        numberofPages.map((page,i)=>{\r\n                        return <li key={i} id={page}\r\n\r\n                        style={{\r\n                            backgroundColor: Check ? \r\n                            '' : \r\n                            page===this.props.location.state.currentPage ? 'red' : ''\r\n                        }}\r\n\r\n                        onClick={(e)=>\r\n                            this.props.history.push({\r\n                                pathname: `/path/${page}`,\r\n                                state: {currentPage : page}\r\n                            })}\r\n\r\n                        >{page}</li>\r\n                        })\r\n                        }\r\n                    </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        data: state.data,\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{Data_Loaded_Successfully}) (withRouter(Result));","import * as type from '../Constants/index';\r\nimport axios from 'axios';\r\n\r\n// export const FetchDataFromApi =()=>{\r\n//     return async (Fetch) =>{\r\n//         const data =await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n//         const res = await data.data\r\n\r\n//         Fetch({\r\n//             type: type.DATA,\r\n//             payload: res\r\n//         })\r\n//     }\r\n// }\r\n\r\nconst Loading = () =>{\r\n    return{\r\n        type : type.LOADING\r\n    }\r\n}\r\n\r\nconst Loading_Err = (Err) => {\r\n    return {\r\n        type: type.LOADING_ERR,\r\n\r\n        payload: Err\r\n    }\r\n}\r\n\r\nexport const Data_Loaded_Successfully = ()=>{\r\n    return dispath => {\r\n        dispath (Loading());\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => {dispath ( {type:type.RECEIVED_DATA , payload: res.data});\r\n    }).catch(e => {\r\n        dispath(Loading_Err(e))\r\n    })\r\n    }\r\n}","export const DATA = 'DATA';\r\nexport const LOADING = 'LOADING';\r\nexport const LOADING_ERR = 'LOADING_ERR';\r\nexport const RECEIVED_DATA = 'RECEIVED_DATA';","import React from 'react';\r\nimport Result from './Result/Result'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center pb-4\">All Posts</h1>\r\n            <Result/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import * as type from \"../Constants/index\";\r\n\r\nconst initState={\r\n    data:[] ,\r\n    loading: false,\r\n    Error : []\r\n}\r\n\r\nexport const Reducer =(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case type.LOADING:\r\n            \r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case type.LOADING_ERR :\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                Error: action.payload\r\n            }\r\n        case type.RECEIVED_DATA: \r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                data: action.payload\r\n            }\r\n    \r\n        default:\r\n            return{\r\n                ...state,\r\n            }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {Reducer} from './Reducer/index'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst middleware = [thunk,logger]\r\nconst store = createStore(Reducer,applyMiddleware(...middleware));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n        <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n,document.getElementById('root'))"],"sourceRoot":""}